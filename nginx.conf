worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # 기본 최적화
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 4096;

    # 압축
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml application/octet-stream image/svg+xml;
    gzip_min_length 1024;

    # 업그레이드(웹소켓 등) 처리
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream afterhee_upstream {
        # 레플리카
        server afterhee1:8080 max_fails=3 fail_timeout=10s;
        server afterhee2:8080 max_fails=3 fail_timeout=10s;
        server afterhee3:8080 max_fails=3 fail_timeout=10s;

        # 라운드로빈 기본. 트래픽 특성상 지연 분산이 필요하면 주석 해제
        # least_conn;

        # keepalive 커넥션 풀
        keepalive 64;
    }

    server {
        listen 80;
        server_name afterhee;

        # 클라이언트 요청 크기
        client_max_body_size 20m;

        # 기본 라우팅 (정적 파일을 nginx에서 직접 서빙하려면 별도 root/location 추가)
        location / {
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # 업그레이드(웹소켓)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # 표준 프록시 헤더
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 타임아웃/재시도 정책
            proxy_connect_timeout   3s;
            proxy_send_timeout     30s;
            proxy_read_timeout     30s;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 3;

            # 업스트림
            proxy_pass http://afterhee_upstream;
        }
    }
}
